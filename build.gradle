plugins
{
	id "groovy"

	id "codenarc"
	id "jdepend"
	id "java-gradle-plugin"

	id "com.gradle.plugin-publish" version "0.9.3"
	id "net.researchgate.release" version "2.3.5"
}

apply from: "gradle/java.gradle"
apply from: "gradle/javadoc.gradle"
javadoc.title = "Gradle Document Converter Plugin ${project.version}"

repositories
{
	jcenter()
}

dependencies
{
	compile gradleApi()
	compile group: "org.apache.poi", name: "poi-scratchpad", version: "3.14"
	compile group: "org.apache.poi", name: "poi-ooxml", version: "3.14"
	compile group: "org.apache.xmlgraphics", name: "fop", version: "2.1"
	compile group: "fr.opensagres.xdocreport", name: "org.apache.poi.xwpf.converter.pdf", version: "1.0.5"
	compile group: "commons-io", name: "commons-io", version: "2.4"

	testCompile(group: "org.spockframework", name: "spock-core", version: "1.0-groovy-2.4")
	{
		exclude group: 'org.codehaus.groovy'
	}
	testCompile gradleTestKit()
}


apply from: "gradle/checkstyle.gradle"
apply from: "gradle/pmd.gradle"
apply from: "gradle/code-narc.gradle"
apply from: "gradle/findbugs.gradle"

test
{
	workingDir = file("${project.buildDir}/test-working-directory")

	doFirst
	{
		workingDir.deleteDir()
		workingDir.mkdirs()
		def classpathFiles = project.sourceSets.main.output.files + configurations.runtime.files -
				configurations.detachedConfiguration(/*dependencies.gradleApi(), */dependencies.localGroovy())
		systemProperties = ['test.classpath': classpathFiles.collect{it.canonicalPath}.join(';')]
	}
}

apply from: "gradle/jacoco.gradle"

pluginBundle
{
	website = "https://github.com/Myllyenko/gradle-word-to-pdf-converter-plugin"
	vcsUrl = "https://github.com/Myllyenko/gradle-word-to-pdf-converter-plugin.git"

	plugins
	{
		wordToPdfConverter
		{
			id = "ru.myllyenko.document-converter"
			displayName = project.description
			description = displayName
			tags = ["doc", "docx", "word", "pdf"]
			version = project.version
		}
	}
}

apply from: "gradle/release.gradle"
